<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on Yuantops&#39; Blog</title><link>https://blog.yuantops.com/tags/hugo/</link><description>Recent content in Hugo on Yuantops&#39; Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>yuan.tops@gmail.com (yuantops)</managingEditor><webMaster>yuan.tops@gmail.com (yuantops)</webMaster><copyright>All rights reserved.</copyright><lastBuildDate>Wed, 01 Sep 2021 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.yuantops.com/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>一次顿悟</title><link>https://blog.yuantops.com/tech/some_eureka_moment/</link><pubDate>Wed, 01 Sep 2021 00:00:00 +0800</pubDate><author>yuan.tops@gmail.com (yuantops)</author><guid>https://blog.yuantops.com/tech/some_eureka_moment/</guid><description>最近用 Emacs ox-hugo 写了几篇文章，体验比较糟，表现为总是无理由卡顿，特别是在 org 页面按下 `Ctrl-C, Ctrl-E`导出markdown时直接卡死，好几次只能强行杀掉Emacs 进程。
总所周知，Emacs 是神的编辑器，肯定不会出问题；我不爽，必定是我不会用了。于是，我鼓足勇气，想看看是哪里出了问题。
经过辛勤搜索，各种修改配置，纹丝不动。焦躁之余，不禁回忆起往事……
原本我是坚定vim党，自得其乐。
后来，受网络meme影响，终于买了一本讲Emacs的电子书，开始像八爪章鱼一样学按键，键位那么多，组合那么多。。。草草翻完一遍，只剩下 &amp;ldquo;这也行！&amp;rdquo; 的感叹号。试了 Dired, Magit, 自觉太复杂，难以记忆。放弃之。
又过了一段时间，心又痒痒了……这次吃了 org 的安利，GTD 好厉害！！大概实践了两个星期，只记得按 Tab 键可以切换标题等级。
下一次入坑，是受到 ox-hugo 的蛊惑: 确实如行云流水，非常满意。
想到这里，我顿悟了，我只是为了 org-mode 和 ox-hugo 啊 ！ Emacs 再怎么厉害，别人用得再怎么出神入化，用它写代码(特别写Java!!)、看小说、玩游戏、看视频…… 和我有什么关系呢? 弱水三千，只需取一瓢。
于是，爽爽快快删掉攒了多年的配置:
rm -fr .emacs.d 热情投向 spacemacs 怀抱:
git clone -b develop https://github.com/syl20bnr/spacemacs .emacs.d 启动emacs。因为是spacemacs第一次加载配置文件，会有一些询问交互。一路选择最小化配置。
最后修改 .spacemacs, 加上 ox-hugo 支持:
1 2 3 (setq-default dotspacemacs-configuration-layers &amp;#39;((org :variables org-enable-hugo-support t))) 重新加载配置，完完全全就好了！</description></item><item><title>浏览器会处理URL里的相对路径</title><link>https://blog.yuantops.com/tech/how_web_broswer_handles_url_relative_path/</link><pubDate>Thu, 21 Nov 2019 15:53:00 +0800</pubDate><author>yuan.tops@gmail.com (yuantops)</author><guid>https://blog.yuantops.com/tech/how_web_broswer_handles_url_relative_path/</guid><description>新系统上线前，安全部门扫描出一个高危漏洞：文件任意下载漏洞。渗透测试人员在URL里加上相对路径，不断发起HTTP请求，居然成功下载到Linux系统密码文件。修复漏洞挺简单，限制HTTP服务访问文件系统权限，不允许超出指定目录，几行代码搞定。
修复之后准备进行验证，第一步当然是复现漏洞。没想到，这一步就挺曲折。
消失的点号 打开chrome，在地址栏输入带了相对路径( .. )的URL。URL指向一个文件，理论上，会触发文件下载。结果是：地址栏URL路径里点号全不见了，变成了一个正常地址。多试几遍，把双点号换成单点号，仍然如此。用 wiresharks 抓包看HTTP报文，请求头 path 没有点号。这说明，浏览器做了手脚。
Google搜之，找到一份解析URI的RFC3968标准，专门有一章论述解析点号：Remove Dot Segments。经过解析，点号和双点号会消失，这个过程被称为 remove_dot_segments 。(RFC3968给出了这个过程的伪代码。)
Google官方在一篇文章里，将Chrome解析URL的过程称为 `Canonicalization` (display-urls-in-canonical-form) 。经过解析，Chrome地址栏的点号变成实际值。
结合两篇文档，原理清楚了：浏览器遵循RFC3968规范处理URL相对路径，所以点号和双点号都被干掉了。
改用Burp Suite重现问题 不能用浏览器复现问题，改尝试 curl 命令。结果，curl也不能复现。好在可以借助 Burp Suite 工具。
Burp Suite是一款攻击web服务的集成工具，一般黑客用它来渗透网络。我们牛刀小用，用来拦截、修改HTTP请求报文。过程不在此赘述。总之，用它绕过了相对路径解析、重现了漏洞。
修复漏洞 略。</description></item><item><title>How to blog with ox-hugo in Emacs</title><link>https://blog.yuantops.com/tech/blogging-with-ox-hugo/</link><pubDate>Thu, 25 Jul 2019 14:47:00 +0800</pubDate><author>yuan.tops@gmail.com (yuantops)</author><guid>https://blog.yuantops.com/tech/blogging-with-ox-hugo/</guid><description>我的一篇老博客，介绍了用Emacs和Org-mode写博客的工作流。总的来说，勉强符合预期，流程稍显磕绊。今天偶然发现，用Org-mode写博客有了正规军： ox-hugo 。简单试用之后,发现 ox-hugo 表现很流畅，几乎就是对之前流程的升级，于是毫不犹豫选 ox-hugo 。
安装 ox-hugo 是一个工作在Org-mode的Emacs包，安装过程可以说平平无奇：
M x package-refresh-contents :: 更新安装源 添加Emacs配置。修改细节与Emacs配置风格相关，我使用Purcell维护的.emacs.d配置，仅供参考。
在 .emacs.d/lisp/ 目录下，新增配置文件 init-ox-hugo.el
1 2 3 4 5 6 7 (require-package &amp;#39;ox-hugo)
(with-eval-after-load &amp;#39;ox (require &amp;#39;ox-hugo))
(provide &amp;#39;init-ox-hugo)
在入口配置文件 .emacs.d/init.el 中，引用新增的配置文件
(require &#39;init-ox-hugo) 写博客旧流程 现在，org文件可以直接导出为Hugo支持的Markdown格式了。这一点 ox-pandoc 也能做到，但 ox-hugo 还能做得更多。
回顾之前的工作流:
新建xx.org文件 输入二级标题，接着插入 front matter 。 front matter 内容大致如下：
+++ title = &amp;quot;&amp;quot; date = &amp;quot;&amp;quot; Categories = [&amp;quot;Tech&amp;quot;] Tags = [&amp;quot;Emacs&amp;quot;] Description = &amp;quot;&amp;quot; keywords = [&amp;quot;&amp;quot;] +++ 写博客正文</description></item></channel></rss>